{
  "openapi": "3.0.0",
  "info": {
    "title": "Member Management API",
    "version": "1.0.0",
    "description": "API for managing members, roles, and permissions"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "summary": "Login a member",
        "security": [
          {}
        ],
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in successfully"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new member",
        "security": [
          {}
        ],
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "profilePicture": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member registered successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/members": {
      "get": {
        "summary": "Get all members",
        "description": "Retrieves a list of all members. Can be filtered by username, email, phone, active status, and sorted by 'updatedAt'.",
        "tags": ["Members"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string"
            },
            "description": "Filter by username (case-insensitive, partial match)"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "description": "Filter by email (case-insensitive, partial match)"
          },
          {
            "in": "query",
            "name": "phone",
            "schema": {
              "type": "string"
            },
            "description": "Filter by phone (prefix match)"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status (true or false)"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order for 'updatedAt' field (asc or desc, defaults to desc)"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of members, potentially filtered and sorted."
          },
          "400": {
            "description": "Invalid filter parameters"
          }
        }
      },
      "post": {
        "summary": "Create a new member",
        "tags": ["Members"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" },
                  "username": { "type": "string" },
                  "phone": { "type": "string" },
                  "isActive": { "type": "boolean" },
                  "profilePicture": { "type": "string", "format": "uri" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member created successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/members/{id}": {
      "put": {
        "summary": "Update an existing member",
        "tags": ["Members"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "Member ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "username": { "type": "string" },
                  "phone": { "type": "string" },
                  "isActive": { "type": "boolean" },
                  "profilePicture": { "type": "string", "format": "uri" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member updated successfully"
          },
          "404": {
            "description": "Member not found"
          }
        }
      },
      "get": {
        "summary": "Get a member by ID",
        "tags": ["Members"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "Member ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Member found"
          },
          "404": {
            "description": "Member not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a member",
        "tags": ["Members"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "Member ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Member deleted successfully"
          },
          "404": {
            "description": "Member not found"
          }
        }
      }
    },
    "/member_roles/assign": {
      "post": {
        "summary": "Assign a role to a member",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberId": {
                    "type": "string"
                  },
                  "roleId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role assigned successfully"
          }
        }
      }
    },
    "/member_roles": {
      "get": {
        "summary": "Get all member-role associations",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all member-role associations"
          }
        }
      }
    },
    "/member_roles/remove": {
      "delete": {
        "summary": "Remove a role from a member",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberId": {
                    "type": "string"
                  },
                  "roleId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role removed successfully"
          }
        }
      }
    },
    "/member_roles/update": {
      "put": {
        "summary": "Update a member's role",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberId": {
                    "type": "string"
                  },
                  "oldRoleId": {
                    "type": "string"
                  },
                  "newRoleId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member's role updated"
          }
        }
      }
    },
    "/member_roles/{memberId}/roles": {
      "get": {
        "summary": "Get all roles for a specific member",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of roles"
          }
        }
      }
    },
    "/member_roles/with-members": {
      "get": {
        "summary": "Get all roles with their members",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of roles and members"
          }
        }
      }
    },
    "/member_roles/{roleId}/members": {
      "get": {
        "summary": "Get all members for a specific role",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of members"
          }
        }
      }
    },
    "/member_roles/assign-member": {
      "post": {
        "summary": "Assign a member to a role (alternate endpoint)",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  },
                  "memberId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member assigned to role"
          }
        }
      }
    },
    "/member_roles/remove-member": {
      "delete": {
        "summary": "Remove a member from a role (alternate endpoint)",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  },
                  "memberId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member removed from role"
          }
        }
      }
    },
    "/member_roles/update-member": {
      "put": {
        "summary": "Update a role's member (alternate endpoint)",
        "tags": [
          "MemberRoles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  },
                  "oldMemberId": {
                    "type": "string"
                  },
                  "newMemberId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member updated for role"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "summary": "Get all roles",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all roles"
          }
        }
      },
      "post": {
        "summary": "Create a new role",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "summary": "Get role by ID",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Role ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved successfully"
          },
          "404": {
            "description": "Role not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing role",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Role ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully"
          },
          "404": {
            "description": "Role not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a role by ID",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Role ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully"
          },
          "404": {
            "description": "Role not found"
          }
        }
      }
    }
  },
  "tags": [
      {
        "name": "Auth",
        "description": "Authentication endpoints"
      },
      {
        "name": "Members",
        "description": "Member management endpoints"
      },
      {
        "name": "MemberRoles",
        "description": "APIs for managing member-role relationships"
      },
      {
        "name": "Roles",
        "description": "Role management endpoints"
      }
    ]
}
